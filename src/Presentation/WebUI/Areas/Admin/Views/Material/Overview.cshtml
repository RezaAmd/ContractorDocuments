@model IEnumerable<ContractorDocuments.WebUI.Areas.Admin.Models.Materials.MaterialViewModel>
@{
    ViewData["Title"] = "قرارداد";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <div>
                    <h4><i class="fa fa-truck-ramp-box me-1"></i> مصالح</h4>
                </div>
                <div>
                    <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#create-material-modal">+ جدید</button>
                </div>
            </div>
            <div class="card-body">
                <div class="scrollable">
                    <table class="table table-borderless table-striped table-hover">
                        <thead>
                            <tr class="sticky-top">
                                <th>نوع</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Count() > 0)
                            {
                                foreach (var material in Model)
                                {
                                    <tr>
                                        <td>@material.Name</td>
                                        <td>
                                            <a href="/admin/material/detail/@material.Id" class="btn btn-sm">مشاهده</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td class="text-center text-muted py-3" colspan="2">موردی یافت نشد</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* Add New Stage *@
<div class="modal" tabindex="-1" id="create-material-modal" aria-labelledby="CreateMaterialLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content" method="post" action="/Admin/Material/Create">
            <div class="modal-header">
                <h5 class="modal-title">متریال جدید</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    <label class="mb-2" for="material-name">نام</label>
                    <input id="material-name" class="form-control" name="name" maxlength="20" />
                </div>
                <div class="mb-3">
                    <label class="mb-2" for="material-measure-select">واحد اندازه گیری</label>
                    <select id="material-measure-select" class="form-control" name="MeasureId">
                        <option selected disabled>انتخاب کنید</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">لغو</button>
                <button type="submit" class="btn btn-primary">افزودن</button>
            </div>
        </form>
    </div>
</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            // Fetch measures.
            await rest.getAsync('/admin/measure/getAll', null, (isSuccess, response) => {
                var materialMeasureSelect = document.getElementById('material-measure-select');
                if (!materialMeasureSelect)
                    return;
                response.forEach((measure) => {
                    var opt = document.createElement('option');
                    opt.value = measure.id;
                    opt.innerHTML = measure.name;
                    materialMeasureSelect.appendChild(opt);
                });
            });
        })
    </script>
}